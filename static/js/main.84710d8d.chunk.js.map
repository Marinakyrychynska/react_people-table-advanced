{"version":3,"sources":["Pages/HomePage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","Pages/PeoplePage.tsx","Pages/NotFoundPage.tsx","components/Navbar.tsx","App.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","centuriesFilter","PeopleFilters","setSearchWith","query","get","sex","filterCenturies","getAll","classNames","type","placeholder","onChange","event","target","map","item","includes","centuries","filter","el","Loader","PersonLink","person","pathname","slug","name","PeopleTable","people","useParams","sort","order","getSortIcon","fieldName","getParent","parentName","find","born","died","motherName","fatherName","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","setSearchParams","filterSex","visiblePeople","peopleAll","filteredPeople","queryToLower","toLowerCase","length","Math","ceil","a","b","localeCompare","reverse","getPreparePeople","useEffect","getPeople","catch","finally","NotFoundPage","getLinkClass","isActive","Navbar","role","App","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.84710d8d.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\nimport { SearchParams } from '../utils/searchHelper';\n\nconst centuriesFilter = ['16', '17', '18', '19', '20'];\n\ninterface Props {\n  setSearchWith: (params: SearchParams) => void,\n}\n\nexport const PeopleFilters: React.FC<Props> = ({ setSearchWith }) => {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || null;\n  const filterCenturies = searchParams.getAll('centuries') || [];\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: event.target.value || null });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames({ 'is-active': sex === null })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={classNames({ 'is-active': sex === 'm' })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={classNames({ 'is-active': sex === 'f' })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesFilter.map(item => (\n              <SearchLink\n                key={item}\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': filterCenturies.includes(item),\n                })}\n                params={{\n                  centuries: filterCenturies.includes(item)\n                    ? filterCenturies.filter(el => el !== item)\n                    : [...filterCenturies, item],\n                }}\n              >\n                {item}\n              </SearchLink>\n            ))}\n\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            centuries: null,\n            sex: null,\n            query: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search: searchParams.toString(),\n      }}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { SearchLink } from './SearchLink';\nimport { SearchParams } from '../utils/searchHelper';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const sort = searchParams.get('sort') || null;\n  const order = searchParams.get('order') || null;\n  const getSortIcon = (fieldName: string) => {\n    if (!sort || sort !== fieldName) {\n      return {\n        sort: fieldName,\n      };\n    }\n\n    if (sort === fieldName && !order) {\n      return {\n        sort: fieldName,\n        order: 'desc',\n      };\n    }\n\n    return {\n      sort: null,\n      order: null,\n    };\n  };\n\n  const getParent = (name: string | null) => {\n    if (!name) {\n      return '-';\n    }\n\n    const parentName = people.find(person => person.name === name);\n\n    if (parentName) {\n      return <PersonLink person={parentName} />;\n    }\n\n    return name;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={getSortIcon('name') as SearchParams}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas fa-sort', {\n                    'fa-sort-up': sort === 'name' && !order,\n                    'fa-sort-down': sort === 'name' && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={getSortIcon('sex') as SearchParams}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas fa-sort', {\n                    'fa-sort-up': sort === 'sex' && !order,\n                    'fa-sort-down': sort === 'sex' && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={getSortIcon('born') as SearchParams}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas fa-sort', {\n                    'fa-sort-up': sort === 'born' && !order,\n                    'fa-sort-down': sort === 'born' && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={getSortIcon('died') as SearchParams}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas fa-sort', {\n                    'fa-sort-up': sort === 'died' && !order,\n                    'fa-sort-down': sort === 'died' && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{getParent(person.motherName)}</td>\n            <td>{getParent(person.fatherName)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const filterSex = searchParams.get('sex') || 'all';\n  const filterCenturies = searchParams.getAll('centuries') || [];\n  const sort = searchParams.get('sort') || null;\n  const order = searchParams.get('order') || null;\n\n  const getPreparePeople = (peopleAll: Person[]) => {\n    let filteredPeople = [...peopleAll];\n\n    if (query) {\n      const queryToLower = query.toLowerCase();\n\n      filteredPeople = filteredPeople.filter(person => (\n        person.name.toLowerCase().includes(queryToLower)\n        || person.motherName?.toLowerCase().includes(queryToLower)\n        || person.fatherName?.toLowerCase().includes(queryToLower)\n      ));\n    }\n\n    if (filterSex !== 'all') {\n      filteredPeople = filteredPeople\n        .filter(person => person.sex === filterSex);\n    }\n\n    if (filterCenturies.length > 0) {\n      filteredPeople = filteredPeople\n        .filter(person => filterCenturies\n          .includes(Math.ceil(person.born / 100).toString()));\n    }\n\n    if (sort) {\n      switch (sort) {\n        case 'name':\n        case 'sex':\n          return filteredPeople.sort((a, b) => a[sort].localeCompare(b[sort]));\n\n        case 'born':\n        case 'died':\n          return filteredPeople.sort((a, b) => a[sort] - b[sort]);\n\n        default:\n          return filteredPeople;\n      }\n    }\n\n    if (order === 'desc') {\n      filteredPeople.reverse();\n    }\n\n    return filteredPeople;\n  };\n\n  const visiblePeople = getPreparePeople(people);\n\n  const setSearchWith = (params: SearchParams) => {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters setSearchWith={setSearchWith} />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {!isLoading && errorMessage && (\n                <p data-cy=\"peopleLoadingError\">\n                  {errorMessage}\n                </p>\n              )}\n\n              {people.length === 0 && !isLoading && !errorMessage && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!isLoading && people.length === 0 && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {!isLoading && people.length > 0 && (\n                <PeopleTable people={visiblePeople} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive } : { isActive: boolean }) => {\n  return classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n};\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { App } from './App';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}